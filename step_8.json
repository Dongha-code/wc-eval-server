{
  "step": "STEP 8",
  "title": "실무 운영 설정과 보안",
  "sections": [
    "SSL 인증서 및 암호화 알고리즘 설정",
    "쿠키 도메인 및 Secure 속성 설정",
    "IP/Host 화이트리스트 설정",
    "세션 연장, 중복 로그인, 사용자 상태 관리",
    "사용자 접속 이력 추적 및 로그 감사 설정"
  ],
  "context": "[STEP 8-1] SSL 인증서 및 암호화 알고리즘 설정\n[STEP 8-2] 쿠키 도메인 및 Secure 속성 설정\n[STEP 8-3] IP/Host 화이트리스트 설정\n[STEP 8-4] 세션 연장, 중복 로그인, 사용자 상태 관리\n[STEP 8-5] 사용자 접속 이력 추적 및 로그 감사 설정\n[STEP 8-1] SSL 인증서 및 암호화 알고리즘 설정\n✅ 개념 요약\nWiseCollector의 수집 서버 또는 관리자 페이지(Manager)는 HTTPS 기반의 암호화 통신을 지원합니다.\n이를 위해\nSSL 인증서 파일(.pfx, .jks)\n을 설치하고 설정 파일에 해당 경로를 지정해야 하며, 암호화 알고리즘 설정도 함께 적용할 수 있습니다.\n✅ SSL 인증서 적용 방법\n💡 수집 서버(application.properties) 또는 Manager(process.properties) 내 설정 예시:\nserver.ssl.enable=true\nserver.ssl.key-store=/nlogger/nlog-server/cert/nlog.pfx\nserver.ssl.key-store-password=your_password\nkey-store\n에는 인증서 파일 경로 지정\n.pfx\n또는\n.jks\n형식 지원\nenable=true\n로 설정해야 HTTPS가 활성화됨\n✅ 인증서 발급 및 형식\n인증서 종류\n설명\n사설 인증서\n테스트/사내 서비스용, 자체 생성 가능 (예: OpenSSL)\n공인 인증서\n외부 사용자 대상 서비스, CA 발급 필요 (예: Let's Encrypt)\n💡 실제 운영 시에는\n공인 인증서 권장\n, 특히 iOS/Safari 등에서\n미인증서 차단 현상\n발생 가능\n✅ HTTPS 로깅 URL 설정 예시 (Nlogger)\nnth_logging_url_base_http: \"https://3.34.44.62:9320/nlog\",\nnth_logging_url_base_https: \"https://3.34.44.62:9320/nlog\"\nHTTPS 환경에서는 위와 같이 URL을 명시해야 정상 전송됨\nHTTP와 병행 사용 시도 중지됨 →\nhttps\n만 허용하는 서버가 증가하는 추세\n✅ 암호화 알고리즘 설정 예시\nWiseCollector2.0운영.pdf\n에는\n암호화 통신 시 사용되는 알고리즘\n을 지정할 수 있는 설정 언급이 있음\n일반적으로 TLS 1.2 이상 + RSA-2048, SHA-256 기반 키 조합 사용\nssl.protocol=TLSv1.2\nssl.cipher-suites=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n💡 단, 설정 방식은 서버 프레임워크(Spring Boot, Netty 등)에 따라 달라지므로 가이드라인 기반 커스터마이징 필요\n📌 실무에서의 팁 (선택사항)\n.pfx\n파일 생성 시 비밀번호 복잡도 정책 주의 (영문+숫자+특수문자 포함)\n인증서 유효기간 만료 여부는\nopenssl x509 -enddate\n로 점검\n배포 후 HTTPS 페이지에서\n브라우저 보안 경고 여부\n반드시 체크\n📌 학습 체크포인트\nWiseCollector에서 HTTPS 설정을 적용하려면 어떤 설정 파일과 속성을 수정해야 하나요?\n인증서 파일은 어떤 형식을 지원하며, 운영 환경에서 어떤 유형의 인증서를 권장하나요?\n암호화 통신 설정 시\nkey-store\n외에 반드시 지정해야 할 항목은 무엇인가요?\n로그 전송용 URL이\nhttps://\n로 시작하지 않을 경우 어떤 문제가 발생할 수 있나요?\n[STEP 8-2] 쿠키 도메인 및 Secure 속성 설정\n✅ 개념 요약\nWiseCollector는 로그 수집 시 사용자 식별 및 분석을 위해 쿠키(PUID, PCID 등)를 활용합니다.\n이 쿠키는\n발급 도메인, 유효 범위, Secure 속성(HTTPS 환경 전용)\n등의 설정을 통해 보안성과 적용 범위를 정교하게 조절할 수 있습니다.\n✅ 쿠키 도메인 설정\n💡 기본값: 현재 페이지의 최상위 도메인 기준\n예:\nwiki.wiselog.com\n→\n.wiselog.com\n으로 자동 설정\n💡 설정 위치\nManager 컨테이너 설정 화면 또는\nnlogger.json\n파일\n💡 설정 예시\nvar NTH_PCID_DOMAIN = \".wiselog.com\";\nvar NTH_UID_DOMAIN = \".wiselog.com\";\n멀티 도메인 환경에서\n공통 도메인 설정 필요\n도메인을 지정하지 않으면 브라우저\ndocument.domain\n값 기준으로 발급됨\n✅ Secure 속성 설정 (HTTPS 환경)\n💡 설정 목적\nHTTPS 환경에서만 쿠키를 전송하여\n중간자 공격(Man-in-the-middle)을 방지\n💡 설정 파일:\nmanager/bin/process.properties\nsecurity.cookie.secure=true\n기본값은\nfalse\ntrue\n설정 시, HTTP 접속에서는 쿠키 발급이 제한되므로 반드시 HTTPS 환경에서만 적용해야 함\n✅ 주의사항\n상황\n영향\nHTTPS가 아닌데 Secure 설정\n쿠키가 발급되지 않아 로그인, 식별 불가\n도메인 미지정\nwww.site.com\n과\nshop.site.com\n에서 PCID 공유 안됨\nlocalhost\n,\n127.0.0.1\n등 테스트 환경\nSecure 설정 사용 시 쿠키가 발급되지 않음\n📌 학습 체크포인트\n쿠키 도메인을 명시적으로 설정하지 않았을 때, 어떤 도메인 기준으로 발급되나요?\nSecure 속성은 어떤 환경에서 반드시 설정해야 하며, 설정 시 유의해야 할 점은 무엇인가요?\n멀티 도메인 기반 로그 수집을 하려면 쿠키 도메인을 어떻게 설정해야 하나요?\nHTTP 환경에서\nsecurity.cookie.secure=true\n로 설정하면 어떤 문제가 발생할 수 있나요?\n[STEP 8-3] IP/Host 화이트리스트 설정\n✅ 개념 요약\nWiseCollector의 Manager 또는 수집 서버는 운영 보안을 위해\n접근 가능한 IP 또는 도메인(Host)을 제한할 수 있는 화이트리스트 기능\n을 제공합니다.\n이 기능을 활용하면\n지정된 IP/도메인 외의 접근 시도는 모두 차단\n되며, 특히\n인증서 기반 HTTPS 설정 시에는 도메인 기준 접근만 허용\n하는 것이 더욱 안전한 운영 방식입니다.\n✅ IP 화이트리스트 설정\n💡 설정 파일:\nmanager/bin/process.properties\nsecurity.ip.whitelists=192.168.0.1,10.1.1.1/32,61.33.35.0/24\n단일 IP:\n192.168.0.1\nIP 대역:\n61.33.35.0/24\n쉼표(,)로 다중 설정 가능\n💡 적용 예시\n설정 값\n허용 IP 범위\n61.33.35.130/32\n정확히 61.33.35.130 만 허용\n61.33.35.0/24\n61.33.35.0 ~ 61.33.35.255 모두 허용\n61.33.34.0/24\n허용되지 않음\n(다른 대역)\n✅ Host 화이트리스트 설정 (도메인 기반)\n💡 설정 파일:\nmanager/bin/process.properties\nsecurity.host.whitelists=manager.nethru.co.kr,manager.nethru.com\n접속 시 해당 도메인 외의 주소(IP 등)로 접근하면 차단됨\nHTTPS 인증서 기반 운영 시,\nIP로 접근하면 브라우저에서 인증 오류 발생\n→ 이 설정으로 IP 접근 자체를 막아 안전 확보\n💡 운영 시나리오 예\n접속 주소\n접근 가능 여부\nhttp://1.1.1.1:9310\n❌ 차단됨\nhttps://manager.nethru.co.kr:9310\n✅ 허용\n📌 실무에서의 팁\n운영 환경에서는 IP보다\n도메인 기준 접근을 원칙\n으로 삼는 것이 보안상 유리\nAWS 등에서 IP가 바뀔 수 있는 경우, Route53 등 DNS 설정과 연계 추천\n설정 반영 후 서비스 재시작 필요\n📌 학습 체크포인트\nIP 화이트리스트에서 CIDR 표기(\n/24\n,\n/32\n)는 어떤 의미를 가지나요?\nManager 접근을 도메인으로만 제한하려면 어떤 설정 항목을 적용해야 하나요?\nHost 기반 화이트리스트 설정을 사용하면 IP로 접속 시 어떤 현상이 발생하나요?\n멀티 환경에서 고정 IP를 설정하기 어려울 때 대안으로 활용할 수 있는 방법은?\n[STEP 8-4] 세션 연장, 중복 로그인, 사용자 상태 관리\n✅ 개념 요약\nWiseCollector의 관리자 시스템은 로그인 유지와 사용자 보안 관리를 위해 다양한 세션 정책을 제공합니다.\n세션 연장 설정\n,\n중복 로그인 허용 여부\n,\n사용자 상태 정의\n,\n비밀번호 만료/잠금 정책\n등을 통해 운영자가 시스템 보안 수준을 세밀하게 조정할 수 있습니다.\n✅ 세션 연장 옵션 (\npreserve.connection.for.editing\n)\npreserve.connection.for.editing=true\n설정 위치:\nmanager/bin/process.properties\n기능: 태그/트리거/설정 화면 편집 중에도 주기적 ping을 통해\n세션 만료를 방지\n세션 ping URL:\n/api/session/ping\n(30초 간격)\n미설정 시 기본값은\nfalse\n💡 주의: 해당 옵션은\n보안 점검 기준\n에서 이슈로 지적될 수 있어 기본값이 활성화되어 있지 않음\n✅ 중복 로그인 허용 여부 (\nlogin.multi-login.enabled\n)\nlogin.multi-login.enabled=true\ntrue\n: 같은 계정으로 다수 브라우저/기기에서 로그인 가능\nfalse\n: 새 로그인 시 기존 세션 종료\n기본값:\ntrue\n설정 위치:\nmanager/bin/process.properties\n💡 보안이 중요한 서비스에서는\nfalse\n설정을 권장하며,\n관리자 계정은 특히 주의\n필요\n✅ 사용자 상태 코드\n상태\n의미\nNORMAL\n일반 사용자 (정상 사용 가능)\nINITIAL\n최초 로그인, 비밀번호 변경 필요\nEXPIRED\n비밀번호 만료 상태\nLOCKED\n장기 미사용 또는 로그인 실패로 잠금 상태\n💡 계정 잠금 설정 예시\naccount.policy.expiration.days=90\n설정 시,\n90일 이상 미사용 계정은 자동 잠금\n0\n설정 시 기능 미사용\n최고관리자는 예외\n✅ 사용자 암호 정책 (선택사항)\npassword.policy.count=8\npassword.policy.capitals=1\npassword.policy.numbers=1\npassword.policy.specials=1\n최소 8자, 대문자 1자 이상, 숫자 1자 이상, 특수문자 1자 이상 필수\n보안 규정에 따라 강화 가능\n📌 학습 체크포인트\npreserve.connection.for.editing\n옵션이 활성화되었을 때 세션 만료를 방지하는 방식은?\n중복 로그인을 제한하려면 어떤 설정을 적용해야 하며, 그 보안 효과는?\n사용자 상태 중\nINITIAL\n과\nLOCKED\n는 각각 어떤 조건에서 설정되나요?\n비밀번호 정책을 강화하고자 할 때 적용할 수 있는 설정 항목은 어떤 것들이 있나요?\n[STEP 8-5] 사용자 접속 이력 추적 및 로그 감사 설정\n✅ 개념 요약\nWiseCollector는\n사용자 로그인, 설정 변경, 시스템 제어\n등 주요 활동 이력을 로그로 남겨 보안 감사를 가능하게 합니다.\n이 기능은 설정에 따라 활성화되며, 이력 저장 위치, 보존 기간 등을 세부적으로 제어할 수 있습니다.\n또한,\n로그 항목 형식은 사람이 읽을 수 있도록 정리되어 있어 보안팀 감사용으로 적합\n합니다.\n✅ 접속 이력 활성화 설정\n💡 설정 위치:\nmanager/bin/process.properties\nlog.access.enabled=true\n기본값:\nfalse\ntrue\n설정 시 로그인, 로그아웃, 태그 설정, 트리거 변경 등 활동 이력이 기록됩니다\n✅ 이력 저장 경로 및 기간 설정\n💡 설정 파일:\nmanager/bin/user_access.properties\nlog.access.retentionDays=30\nlog.access.filepath=manager/logs/user_access/user_access_history\nretentionDays\n: 로그 저장 기간 (기본값: 0 → 삭제 안 함)\n로그 파일은 일자별로\nuser_access_history_yyyymmdd\n형식으로 저장됨\n저장 위치 변경 가능\n💡 설정 파일은 배포 시 반영되지 않으므로\n설치 후 수동 이동 필요\n→\n~/manager/bin/\n디렉토리로 복사해야 적용됨\n✅ 이력 로그 형식 예시\n항목\n형식 예시\n로그인\n[06/Jul/2023:10:13:55 +0900] 1.1.1.1 jhoon1980 login -\n로그아웃\n[06/Jul/2023:10:14:55 +0900] 1.1.1.1 jhoon1980 logout -\n태스크 시작\ntask-start agent1:nlog-server1\n태그 수정\ntag-edit container1:tag123\n사용자 생성\nuser-create admin1\n💡 로그 항목은 사용자ID, IP, 시간, 액션명, 객체 식별자로 구성되어 있어\n감사 시 추적이 용이\n합니다\n📌 실무에서의 팁 (선택사항)\n관리자는 주기적으로 로그를 확인하여\n비정상 접속 시도\n또는\n변경 이력 누락\n여부를 점검해야 합니다.\n통합 로그인 환경에서는\n계정 상태와 연결된 감사 로그\n가 함께 기록되어 있어 사용자 활동 흐름 분석에 활용할 수 있습니다.\n📌 학습 체크포인트\n사용자 접속 이력을 기록하기 위해 반드시 활성화해야 하는 설정 파일과 속성은?\n이력 로그의 기본 저장 경로와 파일명 패턴은 어떻게 구성되나요?\nlog.access.retentionDays=30\n설정은 어떤 의미이며, 0으로 설정 시 어떤 동작이 발생하나요?\n로그인/로그아웃 외에 어떤 활동들이 접속 이력으로 기록되나요?"
}